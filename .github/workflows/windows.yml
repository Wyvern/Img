name: Build

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "on"
  RUSTC_WRAPPER: "sccache"

jobs:
  macOS:
    name: Building on macOS.
    runs-on: macos-14

    steps:
      - name: Disable macos spotlight index
        run: |
          sudo mdutil -a -i off
          sudo mdutil -a -d

      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: x86_64-pc-windows-msvc,aarch64-pc-windows-msvc
          components: rust-src

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Build Release
        run: |
          cargo update

          cargo s x86_64-pc-windows-msvc
          cargo s aarch64-pc-windows-msvc

          find ./target -iname img -type f | xargs ls -hl
          sw_vers
          hostinfo
          sysctl -a | grep brand

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Windows-x64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-pc-windows-msvc/src/Img.exe
          asset_name: Windows.exe
          tag: Nightly
          overwrite: true
          body: "Windows x64 binary executable."

      - name: Upload Windows-AArch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-pc-windows-msvc/src/Img.exe
          asset_name: Windows-AArch64.exe
          tag: Nightly
          overwrite: true
          body: "Windows AArch64 binary executable."
