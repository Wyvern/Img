name: Build

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always

jobs:
  Linux:
    name: Building on Ubuntu.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: aarch64-unknown-linux-gnu,x86_64-linux-android
          components: rust-src

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Release
        run: |
          sudo apt install gcc-aarch64-linux-gnu -y
          cargo update
          #time cargo build --release
          #time cargo lto
          time cargo src x86_64-unknown-linux-gnu
          time cargo src aarch64-unknown-linux-gnu
          time cargo src x86_64-linux-android
          find ./target -iname bl -type f | xargs ls -hl
          lscpu
          free -m

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Linux to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-gnu/src/BL
          asset_name: Linux
          tag: Nightly
          overwrite: true
          body: "Ubuntu Linux binary executable."

      - name: Upload Linux-AArch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-unknown-linux-gnu/src/BL
          asset_name: Linux-AArch64
          tag: Nightly
          overwrite: true
          body: "Ubuntu Linux-AArch64 binary executable."

      - name: Upload Android to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-linux-android/src/BL
          asset_name: Android
          tag: Nightly
          overwrite: true
          body: "Ubuntu Android binary executable."
          
  macOS:
    name: Building on macOS.
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: aarch64-apple-darwin
          components: rust-src

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Release
        run: |
          cargo update
          #time cargo build --release
          #time cargo lto
          time cargo src x86_64h-apple-darwin
          time cargo src aarch64-apple-darwin
          lipo -create target/aarch64-apple-darwin/src/BL target/x86_64h-apple-darwin/src/BL -output BL-Universal
          find ./target -iname bl -type f | xargs ls -hl
          ls -hl BL-Universal
          sw_vers
          hostinfo
          sysctl -a | grep brand

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload macOS x86-64h to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64h-apple-darwin/src/BL
          asset_name: macOS-x86_64h
          tag: Nightly
          overwrite: true
          body: "macOS x86-64h binary executable."

      - name: Upload macOS-AArch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/src/BL
          asset_name: macOS-AArch64
          tag: Nightly
          overwrite: true
          body: "macOS AArch64 binary executable."

      - name: Upload macOS-Universal to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: BL-Universal
          asset_name: macOS-Universal
          tag: Nightly
          overwrite: true
          body: "macOS Universal binary executable."

  Windows:
    name: Building on Windows.
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: aarch64-pc-windows-msvc
          components: rust-src

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build release
        run: |
          cargo update
          #cargo build --release
          #cargo lto
          cargo src x86_64-pc-windows-msvc
          cargo src aarch64-pc-windows-msvc
          cmd /r dir /s target\BL.exe
          systeminfo

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Windows-x64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-pc-windows-msvc/src/BL.exe
          asset_name: Windows.exe
          tag: Nightly
          overwrite: true
          body: "Windows x64 binary executable."

      - name: Upload Windows-AArch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-pc-windows-msvc/src/BL.exe
          asset_name: Windows-AArch64.exe
          tag: Nightly
          overwrite: true
          body: "Windows AArch64 binary executable."
