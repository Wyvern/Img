name: Stable

on:
  push:
    branches: ["stable"]
  pull_request:
    branches: ["stable"]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "on"
  RUSTC_WRAPPER: "sccache"

jobs:
  Linux:
    name: Building on Ubuntu.
    runs-on: ubuntu-latest

    steps:
      - name: Purge Ubuntu
        run: |
          sudo apt purge ufw rsyslog logrotate sysstat python3-problem-report sosreport apport

          sudo systemctl mask systemd-journald.service systemd-journald.socket

      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu,aarch64-unknown-linux-musl,x86_64-unknown-linux-musl,riscv64gc-unknown-linux-gnu,x86_64-linux-android,aarch64-linux-android,s390x-unknown-linux-gnu
          components: rust-src

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Android NDK setup
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27
          link-to-sdk: true
          local-cache: true

      - name: Build Release
        run: |
          sudo apt update && sudo apt install gcc-aarch64-linux-gnu gcc-riscv64-linux-gnu gcc-s390x-linux-gnu musl-tools -y

          cargo update

          time cargo l --target s390x-unknown-linux-gnu

          time cargo l --target riscv64gc-unknown-linux-gnu

          time cargo l --target x86_64-unknown-linux-gnu
          time cargo l --target x86_64-unknown-linux-musl

          time cargo l --target aarch64-unknown-linux-gnu
          time cargo l --target aarch64-unknown-linux-musl

          cargo binstall cargo-ndk -y
          time cargo ndk -t x86_64-linux-android -t aarch64-linux-android b --profile lto

          find ./target -iname img -type f | xargs ls -hl
          lscpu
          free -m

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Linux-riscv64gc-gnu to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/riscv64gc-unknown-linux-gnu/lto/Img
          asset_name: Linux-riscv64gc-gnu
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-riscv64gc-gnu binary executable."

      - name: Upload Linux-s390x-gnu to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/s390x-unknown-linux-gnu/lto/Img
          asset_name: Linux-s390x-gnu
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-s390x-gnu binary executable."

      - name: Upload Linux-x86_64-gnu to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-gnu/lto/Img
          asset_name: Linux-x86_64-gnu
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-x86_64-gnu binary executable."

      - name: Upload Linux-x86_64-musl to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-musl/lto/Img
          asset_name: Linux-x86_64-musl
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-x86_64-musl binary executable."

      - name: Upload Linux-aarch64-gnu to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-unknown-linux-gnu/lto/Img
          asset_name: Linux-aarch64-gnu
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-aarch64-gnu binary executable."

      - name: Upload Linux-aarch64-musl to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-unknown-linux-musl/lto/Img
          asset_name: Linux-aarch64-musl
          tag: Stable
          overwrite: true
          body: "Ubuntu Linux-aarch64-musl binary executable."

      - name: Upload Android-x86_64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-linux-android/lto/Img
          asset_name: Android-x86_64
          tag: Stable
          overwrite: true
          body: "Android-x86_64 binary executable."

      - name: Upload Android-aarch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-linux-android/lto/Img
          asset_name: Android-aarch64
          tag: Stable
          overwrite: true
          body: "Android-aarch64 binary executable."

  macOS:
    name: Building on macOS.
    runs-on: macos-14

    steps:
      - name: Disable macos spotlight index
        run: |
          sudo mdutil -a -i off
          sudo mdutil -a -d

      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-ios
          components: rust-src

      # - name: Install cargo-binstall
      #   uses: cargo-bins/cargo-binstall@main

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Build Release
        run: |
          # cargo binstall cargo-pgo -y

          cargo update

          # cargo pgo run -- --profile lto --target aarch64-apple-darwin https://bisipic.online/thread-18097-1-1.html

          # cargo pgo optimize build -- --profile lto --target aarch64-apple-darwin

          time cargo l --target aarch64-apple-darwin
          time cargo l --target x86_64-apple-darwin
          time cargo l --target aarch64-apple-ios

          lipo -create target/aarch64-apple-darwin/lto/Img target/x86_64-apple-darwin/lto/Img -output Img-Universal

          find ./target -iname img -type f | xargs ls -hl
          ls -hl Img-Universal
          sw_vers
          hostinfo
          sysctl -a | grep brand

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload macOS x86-64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-apple-darwin/lto/Img
          asset_name: macOS-x86_64
          tag: Stable
          overwrite: true
          body: "macOS x86-64 binary executable."

      - name: Upload macOS-aarch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/lto/Img
          asset_name: macOS-aarch64
          tag: Stable
          overwrite: true
          body: "macOS aarch64 binary executable."

      - name: Upload iOS to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-ios/lto/Img
          asset_name: iOS
          tag: Stable
          overwrite: true
          body: "iOS binary executable."

      - name: Upload macOS-universal to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Img-Universal
          asset_name: macOS-universal
          tag: Stable
          overwrite: true
          body: "macOS universal binary executable."

  Windows:
    name: Building on Windows.
    runs-on: windows-latest

    steps:
      - name: Disable windows services
        run: |
          sc config "WSearch" start=disabled
          sc config "DiagTrack" start=disabled
          sc config "WdiServiceHost" start=disabled
          sc config "WdiSystemHost" start=disabled
          sc config "PcaSvc" start=disabled
          sc config "WerSvc" start=disabled
          sc stop "DPS"
          sc stop "pla"

          Get-Service -ErrorAction SilentlyContinue|? name -Like "*TELEMETRY*" | Set-Service -StartMode Disabled
          Get-Service -ErrorAction SilentlyContinue|? name -Like "*TELEMETRY*" | ? status -eq "running" | Stop-Service
          Get-Service -ErrorAction SilentlyContinue|? name -Like "*CEIP*" | Set-Service -StartMode Disabled
          Get-Service -ErrorAction SilentlyContinue|? name -Like "*CEIP*" | ? status -eq "running" | Stop-Service
          Get-Service -ErrorAction SilentlyContinue|? name -Like "*Diagnostic*" | Set-Service -StartMode Disabled
          Get-Service -ErrorAction SilentlyContinue|? name -Like "*Diagnostic*" | ? status -eq "running" | Stop-Service

      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc
          components: rust-src

      # - name: Install cargo-binstall
      #   uses: cargo-bins/cargo-binstall@main

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Build release
        run: |
          cargo update

          cargo l --target x86_64-pc-windows-msvc
          cargo l --target aarch64-pc-windows-msvc
          # cargo l --target arm64ec-pc-windows-msvc

          cmd /r dir /s target\Img.exe
          systeminfo

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Windows-x64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-pc-windows-msvc/lto/Img.exe
          asset_name: Windows.exe
          tag: Stable
          overwrite: true
          body: "Windows x64 binary executable."

      - name: Upload Windows-aarch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-pc-windows-msvc/lto/Img.exe
          asset_name: Windows-aarch64.exe
          tag: Stable
          overwrite: true
          body: "Windows aarch64 binary executable."

      # - name: Upload Windows-arm64ec to a GitHub release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: target/arm64ec-pc-windows-msvc/lto/Img.exe
      #     asset_name: Windows-arm64ec.exe
      #     tag: Stable
      #     overwrite: true
      #     body: "Windows arm64ec binary executable."
