name: Android

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "on"
  RUSTC_WRAPPER: "sccache"

jobs:
  Android:
    name: Building on macOS
    runs-on: macos-14

    steps:
      - name: Disable macos spotlight index
        run: |
          sudo mdutil -a -i off
          sudo mdutil -a -d

      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          # targets: x86_64-linux-android,aarch64-linux-android,armv7-linux-androideabi
          components: rust-src
          # toolchain: nightly-2024-08-14

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@main

      - name: Install cargo-ndk
        run: |
          # curl https://raw.githubusercontent.com/Wyvern/Rust/main/config.toml -o ~/.cargo/config.toml;
          cargo install --git https://github.com/bbqsrc/cargo-ndk --tag v3.5.7

      - name: Android NDK setup
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27b
          link-to-sdk: true
          local-cache: true

      - name: Build Release
        run: |
          brew install cargo-zigbuild

          cargo update

          # time cargo z riscv64-linux-android
          time cargo z aarch64-unknown-linux-ohos

          time cargo ndk -t x86_64-linux-android -t aarch64-linux-android -t armv7-linux-androideabi b --profile src -Zbuild-std=core,std,alloc,proc_macro,panic_abort -Zbuild-std-features=panic_immediate_abort

          find ./target -iname img -type f | xargs ls -hl
          sw_vers
          hostinfo
          sysctl -a | grep brand

      - name: Rust Versions
        run: rustup -V; cargo -Vv; rustc -Vv

      - name: Upload Android-x86_64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-linux-android/src/Img
          asset_name: Android-x86_64
          tag: Nightly
          overwrite: true
          body: "Android-x86_64 binary executable."

      - name: Upload Android-aarch64 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-linux-android/src/Img
          asset_name: Android-aarch64
          tag: Nightly
          overwrite: true
          body: "Android-aarch64 binary executable."

      # - name: Upload Android-riscv64 to a GitHub release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: target/riscv64-linux-android/src/Img
      #     asset_name: Android-riscv64
      #     tag: Nightly
      #     overwrite: true
      #     body: "Android-riscv64 binary executable."

      - name: Upload Android-armv7 to a GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/armv7-linux-androideabi/src/Img
          asset_name: Android-armv7
          tag: Nightly
          overwrite: true
          body: "Android-armv7 binary executable."
